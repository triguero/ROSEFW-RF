package org.apache.mahout.classifier.pg.builder;

import org.apache.mahout.classifier.pg.data.Data;
import org.apache.mahout.classifier.pg.data.Dataset;
import org.apache.mahout.classifier.pg.*;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class PGgenerator {
  
  private static final Logger log = LoggerFactory.getLogger(PGgenerator.class);	
  int nClasses, nLabels;

  IPLDEGenerator algorithm;

  public void setNLabels(int nLabels) {
    this.nLabels = nLabels;
  }

  public void build(Data data) {
    //We do here the algorithm's operations

	Dataset dataset = data.getDataset();
	 
	nClasses = dataset.nblabels();
	
	//Gets the number of input attributes of the data-set
	int nInputs = dataset.nbAttributes() - 1;
	
	//It returns the class labels
	String clases[] = dataset.labels();

        algorithm = new IPLDEGenerator(strata[i], 1, 10000, 8, 20, 0.5, 0.9, 0.03, 0.07);
			  
        reduced[i] = new PrototypeSet(algorithm.reduceSet().clone());

	
	dataBase = new DataBase(nInputs, nLabels, data.getRanges(), data.getNames());
	
	ruleBase = new RuleBase(dataBase, inferenceType, combinationType, ruleWeight, data.getNames(), clases, data);	
	
	ruleBase.Generation(data);
  }


}
